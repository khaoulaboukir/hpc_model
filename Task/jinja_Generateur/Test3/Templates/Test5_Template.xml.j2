<?xml version="1.0" encoding="UTF-8" ?>
<romeo version="Romeo v3.10.2">
<TPN name="{{ path }}">


<!-- Place Scheduler -->

  <place id="1" identifier="CPU" label="" initialMarking="{{ nb_cpu }}" eft="0" lft="inf">
      <graphics color="0">
         <position x="601.0" y="61.0"/>
         <deltaLabel deltax="0.0" deltay="-22.0"/>
      </graphics>
      <scheduling gamma="0" omega="0"/>
  </place>

  <place id="2" identifier="GPU" label="" initialMarking="{{ nb_gpu }}" eft="0" lft="inf">
      <graphics color="0">
         <position x="601.0" y="181.0"/>
         <deltaLabel deltax="3.0" deltay="13.0"/>
      </graphics>
      <scheduling gamma="0" omega="0"/>
  </place>

  <place id="3" identifier="Active_core" label="" initialMarking="0" eft="0" lft="inf">
      <graphics color="0">
         <position x="511.0" y="121.0"/>
         <deltaLabel deltax="-56.0" deltay="-7.0"/>
      </graphics>
      <scheduling gamma="0" omega="0"/>
  </place>

  <place id="4" identifier="Executing_core" label="" initialMarking="0" eft="0" lft="inf">
      <graphics color="0">
         <position x="691.0" y="121.0"/>
         <deltaLabel deltax="54.0" deltay="-6.0"/>
      </graphics>
      <scheduling gamma="0" omega="0"/>
  </place>


<!-- Transition Scheduler -->

  <transition id="5" identifier="Call_CPU" label=""  eft="0" lft="0" lft_param="0" speed="1" priority="50" cost="0" unctrl="0" obs="1"  guard="cpu_flag #greater 0">
     <graphics color="0">
        <position x="361.0" y="61.0"/>
        <deltaLabel deltax="9.0" deltay="-29.0"/>
        <deltaGuard deltax="0.0" deltay="14.0"/>
        <deltaUpdate deltax="0.0" deltay="26.0"/>
        <deltaSpeed deltax="-20" deltay="5"/>
        <deltaCost deltax="-20" deltay="5"/>
     </graphics>
     <update><![CDATA[cpu_flag--;]]></update>
  </transition>

  <transition id="6" identifier="Call_GPU" label=""  eft="0" lft="0" lft_param="0" speed="1" priority="50" cost="0" unctrl="0" obs="1"  guard="gpu_flag #greater 0">
     <graphics color="0">
        <position x="361.0" y="181.0"/>
        <deltaLabel deltax="9.0" deltay="-33.0"/>
        <deltaGuard deltax="5.0" deltay="7.0"/>
        <deltaUpdate deltax="6.0" deltay="19.0"/>
        <deltaSpeed deltax="-20" deltay="5"/>
        <deltaCost deltax="-20" deltay="5"/>
     </graphics>
     <update><![CDATA[gpu_flag--;]]></update>
  </transition>

  <transition id="7" identifier="SCHED" label=""  eft="0" lft="0" lft_param="0" speed="1" priority="30" cost="0" unctrl="0" obs="1"  guard="need_sched #greater 0">
     <graphics color="0">
        <position x="601.0" y="121.0"/>
        <deltaLabel deltax="1.0" deltay="-30.0"/>
        <deltaGuard deltax="0.0" deltay="12.0"/>
        <deltaUpdate deltax="20.0" deltay="25.0"/>
        <deltaSpeed deltax="-20" deltay="5"/>
        <deltaCost deltax="-20" deltay="5"/>
     </graphics>
     <update><![CDATA[scheduler(Sorted_Task, List_Core);
need_sched--;]]></update>
  </transition>

  <transition id="8" identifier="Terminate_CPU" label=""  eft="0" lft="0" lft_param="0" speed="1" priority="30" cost="0" unctrl="0" obs="1"  guard="no_need_cpu #greater 0">
     <graphics color="0">
        <position x="841.0" y="61.0"/>
        <deltaLabel deltax="68.0" deltay="-10.0"/>
        <deltaGuard deltax="19.0" deltay="12.0"/>
        <deltaUpdate deltax="12.0" deltay="22.0"/>
        <deltaSpeed deltax="-20" deltay="5"/>
        <deltaCost deltax="-20" deltay="5"/>
     </graphics>
     <update><![CDATA[no_need_cpu--;]]></update>
  </transition>

  <transition id="9" identifier="Terminate_GPU" label=""  eft="0" lft="0" lft_param="0" speed="1" priority="30" cost="0" unctrl="0" obs="1"  guard="no_need_gpu #greater 0">
     <graphics color="0">
        <position x="841.0" y="181.0"/>
        <deltaLabel deltax="64.0" deltay="-10.0"/>
        <deltaGuard deltax="17.0" deltay="12.0"/>
        <deltaUpdate deltax="15.0" deltay="21.0"/>
        <deltaSpeed deltax="-20" deltay="5"/>
        <deltaCost deltax="-20" deltay="5"/>
     </graphics>
     <update><![CDATA[no_need_gpu--;]]></update>
  </transition>


<!-- Arc Scheduler -->

  <arc place="1" transition="5" type="PlaceTransition" weight="1" tokenColor="-1"  inhibitingCondition="">
    <nail xnail="0" ynail="0"/>
    <graphics  color="0">
     </graphics>
  </arc>

  <arc place="2" transition="6" type="PlaceTransition" weight="1" tokenColor="-1"  inhibitingCondition="">
    <nail xnail="0" ynail="0"/>
    <graphics  color="0">
     </graphics>
  </arc>

  <arc place="3" transition="5" type="TransitionPlace" weight="1" tokenColor="-1">
    <nail xnail="0" ynail="0"/>
    <graphics  color="0">
     </graphics>
  </arc>

  <arc place="3" transition="6" type="TransitionPlace" weight="1" tokenColor="-1">
    <nail xnail="0" ynail="0"/>
    <graphics  color="0">
     </graphics>
  </arc>

  <arc place="3" transition="7" type="PlaceTransition" weight="1" tokenColor="-1"  inhibitingCondition="">
    <nail xnail="0" ynail="0"/>
    <graphics  color="0">
     </graphics>
  </arc>

  <arc place="4" transition="7" type="TransitionPlace" weight="1" tokenColor="-1">
    <nail xnail="0" ynail="0"/>
    <graphics  color="0">
     </graphics>
  </arc>

  <arc place="4" transition="8" type="PlaceTransition" weight="1" tokenColor="-1"  inhibitingCondition="">
    <nail xnail="0" ynail="0"/>
    <graphics  color="0">
     </graphics>
  </arc>

  <arc place="4" transition="9" type="PlaceTransition" weight="1" tokenColor="-1"  inhibitingCondition="">
    <nail xnail="0" ynail="0"/>
    <graphics  color="0">
     </graphics>
  </arc>

  <arc place="1" transition="8" type="TransitionPlace" weight="1" tokenColor="-1">
    <nail xnail="0" ynail="0"/>
    <graphics  color="0">
     </graphics>
  </arc>

  <arc place="2" transition="9" type="TransitionPlace" weight="1" tokenColor="-1">
    <nail xnail="0" ynail="0"/>
    <graphics  color="0">
     </graphics>
  </arc>


<!-- Simples_Tasks -->

{% set x_start = [] %}
{% set base = 91 %}
{% for i in range(10) %}
    {% set _ = x_start.append(base + i * 180) %}
{% endfor %}
{% set base_id = 10 %}
{% for task in simple_tasks %}
  {% set task_index = loop.index0 %}
  {% set row = task_index // 10 %}
  {% set col = task_index % 10 %}
  {% set x = x_start[col] %}
  {% set y = 271.0 + row * 270 %}
  {% set offset = task_index * 3 %}
  {% set start_id = base_id + offset %}
  {% set ready_id = start_id + 1 %}
  {% set exec_id = start_id + 2 %}

  <!-- Transition Period -->

  <transition id="{{ start_id }}" identifier="StartT{{ task.subtasks[0].id }}" label=""
              eft="{{ task.period }}" lft="{{ task.period }}"
              eft_param="{{ task.period }}" lft_param="{{ task.period }}"
              speed="1" priority="0" cost="0" unctrl="0" obs="1" guard="">
     <graphics color="0">
        <position x="{{ x }}" y="{{ y }}"/>
        <deltaLabel deltax="4.0" deltay="-30.0"/>
        <deltaGuard deltax="20" deltay="-20"/>
        <deltaUpdate deltax="38.0" deltay="11.0"/>
     </graphics>
     <update><![CDATA[
     ]]></update>
  </transition>

    <!-- Place Ready -->

  <place id="{{ ready_id }}" identifier="ReadyT{{ task.subtasks[0].id }}" label="" initialMarking="0" eft="0" lft="inf">
      <graphics color="0">
         <position x="{{ x }}" y="{{ y + 90 }}"/>
         <deltaLabel deltax="5.0" deltay="-20.0"/>
      </graphics>
      <scheduling gamma="0" omega="0"/>
  </place>

  <!-- Transition Exec -->

  <transition id="{{ exec_id }}" identifier="ExecT{{task_index}}" label=""
              eft="{{ task.subtasks[0].execution_time.BCET }}" lft="{{ task.subtasks[0].execution_time.WCET }}"
              eft_param="{{ task.subtasks[0].execution_time.BCET }}" lft_param="{{ task.subtasks[0].execution_time.WCET }}"
              speed="1" priority="0" cost="0" unctrl="0" obs="1"
              guard="is_selected_task(List_Core, {{ task.subtasks[0].id }})">
     <graphics color="0">
        <position x="{{ x }}" y="{{ y + 180 }}"/>
        <deltaLabel deltax="9.0" deltay="-32.0"/>
        <deltaGuard deltax="15.0" deltay="10.0"/>
        <deltaUpdate deltax="17.0" deltay="26.0"/>
     </graphics>
     <update><![CDATA[
     ]]></update>
  </transition>

  <!-- Arc Task -->

  <arc place="{{ ready_id }}" transition="{{ start_id }}" type="TransitionPlace" weight="1" tokenColor="-1">
     <nail xnail="0" ynail="0"/>
     <graphics  color="0">
     </graphics>
  </arc>

  <arc place="{{ ready_id }}" transition="{{ exec_id }}" type="PlaceTransition" weight="1" tokenColor="-1">
     <nail xnail="0" ynail="0"/>
     <graphics  color="0">
     </graphics>
  </arc>

{% endfor %}

{% set last_task_index = simple_tasks|length - 1 %}
{% set last_row = last_task_index // 10 + 1 %}
{% set last_y = 271.0 + last_row * 270 %}

<!-- DAG_Tasks -->

{% set wait_table = namespace(value=[]) %}
{% macro draw_node(node, x, y, parent_transition_id, base_id_ns, x_ns, dag, drawn) %}

  {% if node.id in drawn.nodes %}

  {% else %}

  {% set _ = drawn.nodes.update({ node.id: true }) %}

  {% set ready_id = base_id_ns.base_id + 1 %}
  {% set exec_id = ready_id + 1 %}
  {% set base_id_ns.base_id = exec_id %}

  {% if node.predecessors | length > 1 %}
  {% set wait_ids = [] %}

  {% for pred_id in node.predecessors %}
        {% set wait_id = base_id_ns.base_id + 1 %}
        {% set base_id_ns.base_id = wait_id %}
        {% set _ = wait_ids.append(wait_id) %}
        <!-- Place Wait from pred {{ pred_id }} -->
        <place id="{{ wait_id }}" identifier="Wait_from_{{ pred_id }}_to_{{ node.id }}" label="" initialMarking="0" eft="0" lft="inf">
            <graphics color="0">
               <position x="{{ x + 180 * loop.index0 }}" y="{{ y + 120 }}"/>
               <deltaLabel deltax="5.0" deltay="-20.0"/>
            </graphics>
            <scheduling gamma="0" omega="0"/>
        </place>

        {% set _ = wait_table.value.append([node.id, pred_id, wait_id]) %}

      {% endfor %}

      {% set start_id = base_id_ns.base_id + 1 %}
      {% set base_id_ns.base_id = start_id %}

      <!-- Transition StartTsub -->
      <transition id="{{ start_id }}" identifier="StartTsub{{ node.id }}" label=""
                  eft="0" lft="inf" eft_param="0" lft_param="inf"
                  speed="1" priority="0" cost="0" unctrl="0" obs="1" guard="">
         <graphics color="0">
            <position x="{{ x + 90 }}" y="{{ y + 120 }}"/>
            <deltaLabel deltax="9.0" deltay="-32.0"/>
            <deltaGuard deltax="15.0" deltay="10.0"/>
            <deltaUpdate deltax="17.0" deltay="26.0"/>
         </graphics>
         <update><![CDATA[]]></update>
      </transition>

      <!-- Arc Wait → Start -->
      {% for wait_id in wait_ids %}
        <arc place="{{ wait_id }}" transition="{{ start_id }}" type="PlaceTransition" weight="1" tokenColor="-1">
           <nail xnail="0" ynail="0"/>
           <graphics  color="0"/>
        </arc>
      {% endfor %}

  <!-- Place -->
  <place id="{{ ready_id }}" identifier="ReadyTsub{{ node.id }}" label="" initialMarking="0" eft="0" lft="inf">
      <graphics color="0">
         <position x="{{ x + 90 }}" y="{{ y + 240 }}"/>
         <deltaLabel deltax="5.0" deltay="-20.0"/>
      </graphics>
      <scheduling gamma="0" omega="0"/>
  </place>

  <!-- Transition -->
  <transition id="{{ exec_id }}" identifier="ExecTsub{{ node.id }}" label=""
              eft="{{ node.execution_time.BCET }}" lft="{{ node.execution_time.WCET }}"
              eft_param="{{ node.execution_time.BCET }}" lft_param="{{ node.execution_time.WCET }}"
              speed="1" priority="0" cost="0" unctrl="0" obs="1"
              guard="">
     <graphics color="0">
        <position x="{{ x + 90 }}" y="{{ y + 360 }}"/>
        <deltaLabel deltax="9.0" deltay="-32.0"/>
        <deltaGuard deltax="15.0" deltay="10.0"/>
        <deltaUpdate deltax="17.0" deltay="26.0"/>
     </graphics>
     <update><![CDATA[
     ]]></update>
  </transition>

  {% for entry in wait_table.value %}
    <!-- Arc Exec to Wait -->
    <arc place="{{ entry[2] }}" transition="{{ entry[2] - 3 }}" type="TransitionPlace" weight="1" tokenColor="-1">
       <nail xnail="0" ynail="0"/>
       <graphics  color="0"/>
    </arc>
  {% endfor %}

    <!-- Arc start to ready -->
    <arc place="{{ ready_id }}" transition="{{ start_id }}" type="TransitionPlace" weight="1" tokenColor="-1">
       <nail xnail="0" ynail="0"/>
       <graphics  color="0"/>
    </arc>

  <!-- Arc from ready to exec -->
  <arc place="{{ ready_id }}" transition="{{ exec_id }}" type="PlaceTransition" weight="1" tokenColor="-1">
     <nail xnail="0" ynail="0"/>
     <graphics  color="0"/>
  </arc>

  {% set new_y = y + 180 %}
  {% for succ in dag.other_nodes if succ.id in node.successors %}
    {{ draw_node(succ, x_ns.x_start, new_y, exec_id, base_id_ns, x_ns, dag, drawn) }}
    {% set x_ns.x_start = x_ns.x_start + 150 %}
  {% endfor %}

  {% else %}

  <!-- Place -->
  <place id="{{ ready_id }}" identifier="ReadyTsub{{ node.id }}" label="" initialMarking="0" eft="0" lft="inf">
      <graphics color="0">
         <position x="{{ x }}" y="{{ y + 90 }}"/>
         <deltaLabel deltax="5.0" deltay="-20.0"/>
      </graphics>
      <scheduling gamma="0" omega="0"/>
  </place>

  <!-- Transition -->
  <transition id="{{ exec_id }}" identifier="ExecTsub{{ node.id }}" label=""
              eft="{{ node.execution_time.BCET }}" lft="{{ node.execution_time.WCET }}"
              eft_param="{{ node.execution_time.BCET }}" lft_param="{{ node.execution_time.WCET }}"
              speed="1" priority="0" cost="0" unctrl="0" obs="1"
              guard="">
     <graphics color="0">
        <position x="{{ x }}" y="{{ y + 180 }}"/>
        <deltaLabel deltax="9.0" deltay="-32.0"/>
        <deltaGuard deltax="15.0" deltay="10.0"/>
        <deltaUpdate deltax="17.0" deltay="26.0"/>
     </graphics>
     <update><![CDATA[
     ]]></update>
  </transition>

  {% for entry in wait_table.value %}
  {% if entry[1] == node.id %}
    <!-- Arc Exec to Wait -->
    <arc place="{{ entry[2] }}" transition="{{ exec_id }}" type="TransitionPlace" weight="1" tokenColor="-1">
       <nail xnail="0" ynail="0"/>
       <graphics  color="0"/>
    </arc>
  {% endif %}
  {% endfor %}

  {% if parent_transition_id is not none %}
    <!-- Arc from parent to ready -->
    <arc place="{{ ready_id }}" transition="{{ parent_transition_id }}" type="TransitionPlace" weight="1" tokenColor="-1">
       <nail xnail="0" ynail="0"/>
       <graphics  color="0"/>
    </arc>
  {% endif %}

  <!-- Arc from ready to exec -->
  <arc place="{{ ready_id }}" transition="{{ exec_id }}" type="PlaceTransition" weight="1" tokenColor="-1">
     <nail xnail="0" ynail="0"/>
     <graphics  color="0"/>
  </arc>

  {% set new_y = y + 180 %}
  {% for succ in dag.other_nodes if succ.id in node.successors %}
    {{ draw_node(succ, x_ns.x_start, new_y, exec_id, base_id_ns, x_ns, dag, drawn) }}
    {% set x_ns.x_start = x_ns.x_start + 150 %}
  {% endfor %}
  {% endif %}
  {% endif %}
{% endmacro %}


{% set ns = namespace(base_id = count_src_node * 3 + 4) %}
{% set ns2 = namespace(x_start = 91) %}
{% set drawn = namespace(nodes = {}) %}

{% for dag in src %}
  {% set y = last_y %}
  {% set period_id = ns.base_id + 1 %}
  {% set x = ns2.x_start %}

  <!-- Transition Period -->
  <transition id="{{ period_id }}" identifier="StartTDAG{{ loop.index0 }}" label=""
              eft="{{ dag.task.period }}" lft="{{ dag.task.period }}"
              eft_param="{{ dag.task.period }}" lft_param="{{ dag.task.period }}"
              speed="1" priority="0" cost="0" unctrl="0" obs="1" guard="">
     <graphics color="0">
        <position x="{{ x }}" y="{{ y }}"/>
        <deltaLabel deltax="4.0" deltay="-30.0"/>
        <deltaGuard deltax="20" deltay="-20"/>
        <deltaUpdate deltax="38.0" deltay="11.0"/>
     </graphics>
     <update><![CDATA[
     ]]></update>
  </transition>

  {% for src in dag.src_nodes %}
    {{ draw_node(src, ns2.x_start, y, period_id, ns, ns2, dag, drawn) }}
    {% set ns2.x_start = ns2.x_start + 150 %}
  {% endfor %}
{% endfor %}



  <timedCost></timedCost>

  <nbTokenColor>0</nbTokenColor>

  <declaration><![CDATA[// insert here your type definitions using C-like syntax

// insert here your function definitions
// using C-like syntax



initially {

    {# === Variables globales === #}
    {% for name, value in globals.items() %}
    int {{ name }} = {{ value }};
    {% endfor %}

    /* Task Declaration */
    task_descriptor [TASK_COUNT] List_Task;
    {% for task in simple_tasks %}
    List_Task[{{ loop.index0 }}].state = {{ task.state }};
    List_Task[{{ loop.index0 }}].core = {{ task.core }};
    List_Task[{{ loop.index0 }}].id = {{ task.id }};
    List_Task[{{ loop.index0 }}].Priority = {{ task.priority }};
    {% endfor %}

    task_descriptor [TASK_COUNT] Sorted_Task;
    int i;
    for(i = 0; i < TASK_COUNT; i++){
        Sorted_Task[i].state = SUSPENDED;
        Sorted_Task[i].core = UNKOWN;
        Sorted_Task[i].id = -1;
        Sorted_Task[i].Priority = -1;
    }

    /* Core Declaration */
    core_descriptor [CORE_COUNT] List_Core;
    {% for core in cores %}
    List_Core[{{ loop.index0 }}].state = {{ core.state }};
    List_Core[{{ loop.index0 }}].type = {{ core.type }};
    List_Core[{{ loop.index0 }}].id = {{ core.id }};
    List_Core[{{ loop.index0 }}].selected_task = {{ core.selected_task }};
    {% endfor %}

}

]]></declaration>

  <project nbinput="0" openinput="0" nbinclude="0" >
  <include id="1" file="{{ c_file }}"/>
 </project>

  <preferences>
      <colorPlace  c0="SkyBlue2"  c1="#ffbebe"  c2="cyan"  c3="green"  c4="yellow"  c5="brown" />

      <colorTransition  c0="yellow"  c1="gray"  c2="cyan"  c3="green"  c4="SkyBlue2"  c5="brown" />

      <colorArc  c0="black"  c1="gray"  c2="blue"  c3="#beb760"  c4="#be5c7e"  c5="#46be90" />

  </preferences>
 </TPN>

  </romeo>