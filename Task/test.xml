<?xml version="1.0" encoding="UTF-8" ?>
<romeo version="Romeo v3.10.2">
<TPN name="/media/khalil-hamdoune/Khalil/Application/romeo-3.10.2/Task/test.xml">
  <place id="1" identifier="Task" label="" initialMarking="0" eft="0" lft="inf"> 
      <graphics color="0"> 
         <position x="586.0" y="166.0"/> 
         <deltaLabel deltax="-1.0" deltay="-25.0"/> 
      </graphics> 
      <scheduling gamma="0" omega="0"/> 
  </place> 

  <place id="2" identifier="P2" label="P2" initialMarking="0" eft="0" lft="inf"> 
      <graphics color="0"> 
         <position x="766.0" y="196.0"/> 
         <deltaLabel deltax="10" deltay="10"/> 
      </graphics> 
      <scheduling gamma="0" omega="0"/> 
  </place> 

  <place id="3" identifier="P3" label="P3" initialMarking="0" eft="0" lft="inf"> 
      <graphics color="0"> 
         <position x="766.0" y="256.0"/> 
         <deltaLabel deltax="10" deltay="10"/> 
      </graphics> 
      <scheduling gamma="0" omega="0"/> 
  </place> 

  <transition id="1" identifier="Global_Clock" label=""  eft="0" lft="inf" speed="1" priority="0" cost="0" unctrl="0" obs="1"  guard="funct(a)"> 
     <graphics color="0"> 
        <position x="496.0" y="166.0"/> 
        <deltaLabel deltax="7.0" deltay="-24.0"/> 
        <deltaGuard deltax="1.0" deltay="14.0"/> 
        <deltaUpdate deltax="-1.0" deltay="25.0"/> 
        <deltaSpeed deltax="-20" deltay="5"/> 
        <deltaCost deltax="-20" deltay="5"/> 
     </graphics> 
     <update><![CDATA[]]></update> 
  </transition> 

  <transition id="2" identifier="T2" label="T2"  eft="0" lft="inf" speed="1" priority="0" cost="0" unctrl="0" obs="1"  guard="b #eqeq 1"> 
     <graphics color="0"> 
        <position x="661.0" y="166.0"/> 
        <deltaLabel deltax="25" deltay="0"/> 
        <deltaGuard deltax="20" deltay="-20"/> 
        <deltaUpdate deltax="20" deltay="10"/> 
        <deltaSpeed deltax="-20" deltay="5"/> 
        <deltaCost deltax="-20" deltay="5"/> 
     </graphics> 
     <update><![CDATA[]]></update> 
  </transition> 

  <transition id="3" identifier="T3" label="T3"  eft="0" lft="inf" speed="1" priority="0" cost="0" unctrl="0" obs="1"  guard="b #eqeq 2"> 
     <graphics color="0"> 
        <position x="676.0" y="226.0"/> 
        <deltaLabel deltax="25" deltay="0"/> 
        <deltaGuard deltax="20" deltay="-20"/> 
        <deltaUpdate deltax="20" deltay="10"/> 
        <deltaSpeed deltax="-20" deltay="5"/> 
        <deltaCost deltax="-20" deltay="5"/> 
     </graphics> 
     <update><![CDATA[]]></update> 
  </transition> 

  <transition id="4" identifier="T4" label="T4"  eft="0" lft="inf" speed="1" priority="0" cost="0" unctrl="0" obs="1"  guard=""> 
     <graphics color="0"> 
        <position x="286.0" y="91.0"/> 
        <deltaLabel deltax="25" deltay="0"/> 
        <deltaGuard deltax="20" deltay="-20"/> 
        <deltaUpdate deltax="20" deltay="10"/> 
        <deltaSpeed deltax="-20" deltay="5"/> 
        <deltaCost deltax="-20" deltay="5"/> 
     </graphics> 
     <update><![CDATA[a = a + 1;]]></update> 
  </transition> 

  <arc place="1" transition="1" type="TransitionPlace" weight="1" tokenColor="-1"> 
     <nail xnail="0" ynail="0"/> 
     <graphics  color="0"> 
     </graphics> 
  </arc> 

  <arc place="1" transition="2" type="PlaceTransition" weight="1" tokenColor="-1"  inhibitingCondition=""> 
    <nail xnail="0" ynail="0"/> 
    <graphics  color="0"> 
     </graphics> 
  </arc> 
 

  <arc place="2" transition="2" type="TransitionPlace" weight="1" tokenColor="-1"> 
     <nail xnail="0" ynail="0"/> 
     <graphics  color="0"> 
     </graphics> 
  </arc> 

  <arc place="1" transition="3" type="PlaceTransition" weight="1" tokenColor="-1"  inhibitingCondition=""> 
    <nail xnail="0" ynail="0"/> 
    <graphics  color="0"> 
     </graphics> 
  </arc> 
 

  <arc place="3" transition="3" type="TransitionPlace" weight="1" tokenColor="-1"> 
     <nail xnail="0" ynail="0"/> 
     <graphics  color="0"> 
     </graphics> 
  </arc> 

  <timedCost></timedCost>

  <nbTokenColor>0</nbTokenColor>

  <declaration><![CDATA[// insert here your type definitions using C-like syntax

// insert here your function definitions 
// using C-like syntax
int funct(int a){
if(a == 0){
return 1;}
else {return 2;}
}

initially {
int a = 0;
int b = funct(a);
// insert here the state variables declarations 
// and possibly some code to initialize them 
// using C-like syntax

 }






































]]></declaration>

  <project nbinput="0" openinput="0" nbinclude="0" >
 </project>

  <preferences> 
      <colorPlace  c0="SkyBlue2"  c1="gray"  c2="cyan"  c3="green"  c4="yellow"  c5="brown" /> 
 
      <colorTransition  c0="yellow"  c1="gray"  c2="cyan"  c3="green"  c4="SkyBlue2"  c5="brown" /> 
 
      <colorArc  c0="black"  c1="gray"  c2="blue"  c3="#beb760"  c4="#be5c7e"  c5="#46be90" /> 
 
  </preferences> 
 </TPN> 

  </romeo>
